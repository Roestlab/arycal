name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.85.0
          override: true
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          # CLI: musl (cargo + musl-gcc, no explicit target)
          - name: arycal-x86_64-unknown-linux-musl
            bin: arycal
            os: ubuntu-latest

          # MPI: glibc
          - name: arycal-x86_64-unknown-linux-gnu-mpi
            bin: arycal
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            features: mpi

          # GUI: glibc dynamic
          - name: arycal-gui-x86_64-unknown-linux-gnu
            bin: arycal-gui
            target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04

          # macOS + Windows
          - name: arycal-x86_64-apple-darwin
            bin: arycal
            target: x86_64-apple-darwin
            os: macos-latest
          - name: arycal-gui-x86_64-apple-darwin
            bin: arycal-gui
            target: x86_64-apple-darwin
            os: macos-latest
          - name: arycal-x86_64-pc-windows-msvc
            bin: arycal
            target: x86_64-pc-windows-msvc
            os: windows-latest
          - name: arycal-gui-x86_64-pc-windows-msvc
            bin: arycal-gui
            target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.85.0
          override: true

      # CLI: musl, no explicit target (musl-gcc wrapper)
      - name: Install musl-tools
        if: matrix.name == 'arycal-x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build Arycal (musl)
        if: matrix.name == 'arycal-x86_64-unknown-linux-musl'
        run: CC=musl-gcc cargo build --release

      # GUI: glibc (GTK + X11)
      - name: Install GUI dependencies
        if: matrix.name == 'arycal-gui-x86_64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libegl1-mesa libgtk-3-dev

      - name: Build Arycal-GUI (glibc)
        if: matrix.name == 'arycal-gui-x86_64-unknown-linux-gnu'
        run: cargo build --release --target=${{ matrix.target }}

      # MPI: glibc
      - name: Install MPI
        if: matrix.name == 'arycal-x86_64-unknown-linux-gnu-mpi'
        run: sudo apt-get update && sudo apt-get install -y libopenmpi-dev openmpi-bin

      - name: Build Arycal (MPI)
        if: matrix.name == 'arycal-x86_64-unknown-linux-gnu-mpi'
        run: cargo build --release --target=${{ matrix.target }} --features mpi

      # Non-Linux: just add targets & build
      - name: Add target for non-Linux builds
        if: startsWith(matrix.target, 'x86_64-apple') || startsWith(matrix.target, 'x86_64-pc')
        run: rustup target add ${{ matrix.target }}

      - name: Build Non-Linux Targets
        if: startsWith(matrix.target, 'x86_64-apple') || startsWith(matrix.target, 'x86_64-pc')
        run: cargo build --release --target=${{ matrix.target }}

      - name: Upload Release Binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ matrix.bin }}
          archive: ${{ matrix.bin }}-${{ github.ref_name }}-${{ matrix.name }}
          target: ${{ matrix.target || '' }}
          include: LICENSE,README.md
          tar: unix
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
          rename: ${{ matrix.name }}
